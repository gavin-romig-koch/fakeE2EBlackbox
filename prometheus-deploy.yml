apiVersion: v1
items:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: fake-e2e-blackbox
      run: prometheus
    name: prometheus
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      run: prometheus
    strategy:
      activeDeadlineSeconds: 21600
      resourlces: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          run: prometheus
          app: fake-e2e-blackbox
      spec:
        containers:
        - image: prom/prometheus
          imagePullPolicy: Always
          name: prometheus
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/prometheus
            name: prometheus-config-volume
          - mountPath: /prometheus
            name: prometheus-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-config
          name: prometheus-config-volume
        - emptyDir: {}
          name: prometheus-data
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      run: prometheus
      app: fake-e2e-blackbox
    name: prometheus
  spec:
    port:
      targetPort: 9090
    to:
      kind: Service
      name: prometheus
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: fake-e2e-blackbox
      run: prometheus
    name: prometheus
  spec:
    ports:
    - port: 9044
      protocol: TCP
      targetPort: 9090
    selector:
      run: prometheus
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  data:
    prometheus.yml: |+
      global:
        scrape_interval:     15s # By default, scrape targets every 15 seconds.

        # Attach these labels to any time series or alerts when communicating with
        # external systems (federation, remote storage, Alertmanager).
        external_labels:
          monitor: 'codelab-monitor'

      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: 'prometheus'

          # Override the global default and scrape targets from this job every 5 seconds.
          scrape_interval: 5s

          static_configs:
            - targets: ['localhost:9090']

        - job_name:       'example-random'

          # Override the global default and scrape targets from this job every 5 seconds.
          scrape_interval: 5s

          static_configs:
            - targets: ['fake-e2e-blackbox:8000']
              labels:
                group: 'production'

      rule_files:
        - "*.rules"

      # Alerting specifies settings related to the Alertmanager.
      alerting:
        alertmanagers:
          - static_configs:
            - targets: ['alertmanager:9093']

    rule1.rules: |+
      ---
      groups:
        - name: gavins_group1
          rules:
          - record: insights_e2e_blackbox_success_ratio
            expr: insights_e2e_blackbox_success_sum / insights_e2e_blackbox_success_count
          - record: insights_e2e_blackbox_success_avg5m
            expr: avg_over_time(insights_e2e_blackbox_success_ratio[5m])

          - alert: insights_e2e_blackbox_success_ratio_toolow
            expr: insights_e2e_blackbox_success_ratio < 0.90

          - alert: insights_e2e_blackbox_success_avg5m_toolow
            expr: insights_e2e_blackbox_success_avg5m < 0.90

  kind: ConfigMap
  metadata:
    name: prometheus-config
    labels:
      app: fake-e2e-blackbox
kind: List
metadata: {}
resourceVersion: ""
